{
	"name": "serverless-node-aws",
	"version": "2.1.1",
	"description": "Example application for running a Node Express app on AWS Lambda using Amazon API Gateway.",
	"main": "lambda.js",
	"scripts": {
		"dev:local": "node scripts/local",
		"dev:invoke-lambda": "cross-var aws lambda invoke --function-name $FUNCTION_NAME --region $REGION --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
		"dev": "nodemon scripts/dev.js --watch src/ scripts/dev.js",
		"release:build": "webpack-cli",
		"release:package": "cross-var aws cloudformation package --template ./sam-template.yaml --s3-bucket $BUCKET_NAME --output-template sam-template.packaged.yaml --region $REGION",
		"release:deploy": "cross-var aws cloudformation deploy --template-file sam-template.packaged.yaml --stack-name $CLOUD_FORMATION_STACK_NAME --capabilities CAPABILITY_IAM --region $REGION --parameter-overrides DomainName=$DOMAIN",
		"release": "npm run release:build && npm run release:package && npm run release:deploy",
		"setup:create-bucket": "cross-var aws s3 mb s3://$BUCKET_NAME --region $REGION",
		"setup:delete-bucket": "cross-var aws s3 rb s3://$BUCKET_NAME --region $REGION",
		"setup:delete-stack": "cross-var aws cloudformation delete-stack --stack-name $CLOUD_FORMATION_STACK_NAME --region $REGION",
		"setup": "npm install && (cross-var aws s3api get-bucket-location --bucket $BUCKET_NAME --region $REGION || npm run setup:create-bucket) && npm run release"
	},
	"license": "Apache-2.0",
	"dependencies": {
		"@vendia/serverless-express": "^4.3.0",
		"body-parser": "^1.17.1",
		"chalk": "^4.1.2",
		"compression": "^1.6.2",
		"cors": "^2.8.3",
		"express": "^4.15.2"
	},
	"devDependencies": {
		"copy-webpack-plugin": "^7.0.0",
		"cross-var": "^1.1.0",
		"nodemon": "^2.0.15",
		"portfinder": "^1.0.28",
		"source-map-support": "^0.5.19",
		"webpack": "^5.21.2",
		"webpack-cli": "^4.5.0"
	}
}
